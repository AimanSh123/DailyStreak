 public int kPalindrome(String str, int n, int k) {
        StringBuilder reverseStr = new StringBuilder(str);
        reverseStr.reverse();
        int lenString = lcs(str,reverseStr.toString());
        int noMinOp = str.length() - lenString;
        return noMinOp > k ? 0 : 1;
    }
    public int lcs(String text1, String text2){
        int [][] dp = new int[text1.length() + 1][text2.length() + 1];
        for(int i = text1.length() - 1; i >= 0; i--){
            for(int j = text2.length() - 1; j >= 0; j--){
                int take = 0;
                if(text1.charAt(i) == text2.charAt(j)){
                    take = dp[i+1][j+1] + 1;
                }
                int notTak1 = dp[i+1][j];
                int notTak2 = dp[i][j+1];
                dp[i][j] = Math.max(take, Math.max(notTak1, notTak2));
            }
        }    
        return dp[0][0];
    }
