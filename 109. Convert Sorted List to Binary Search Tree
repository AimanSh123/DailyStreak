 public TreeNode sortedListToBST(ListNode head) {
        if(head == null){
            return null;
        }
        ListNode mid = middle(head);
        TreeNode root = new TreeNode(mid.val);
        if(mid == head){
            return root;
        }
        root.left = sortedListToBST(head);
        root.right = sortedListToBST(mid.next);
        return root;
    }
    public ListNode middle(ListNode head){
        ListNode prev = head; ListNode slow = head;
        ListNode fast = head;
        while(fast != null && fast.next != null){
            prev = slow; slow = slow.next;
            fast = fast.next.next;
        }
        if(prev != null){
            prev.next = null;
        }
        return slow;

    }
