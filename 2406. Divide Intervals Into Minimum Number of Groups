//brute force
class Solution {
    public int minGroups(int[][] intervals) {
        Arrays.sort(intervals,(a,b)->a[0] - b[0]);
        List<Integer> list = new ArrayList<>();
        for(int[] interval:intervals){
            int val = check(list,interval[0]);
            if(val != -1){
                list.set(val,interval[1]);
            }
            else{
                list.add(interval[1]);
            }
        }
        return list.size();
    }
    public int check(List<Integer>list,int tar){
        for(int i = 0; i < list.size(); i++){
            if(list.get(i) < tar){
                return i;
            }     
        }
        return -1;
    }
}
 public int minGroups(int[][] intervals) {
        Arrays.sort(intervals,(a,b)->a[0] - b[0]);
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        for(int[] interval:intervals){
            if(!pq.isEmpty() && pq.peek() < interval[0]){
                pq.remove();
            }
            pq.add(interval[1]);
    
        }
        return pq.size();
    }
