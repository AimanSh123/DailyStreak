  public int maxProfitAssignment(int[] difficulty, int[] profit, int[] worker) {
        int n = difficulty.length; int maxProfit = 0;
        Pair[] jobs = new Pair [n];
        for(int i = 0; i < n; i++){
            jobs[i] = new Pair(difficulty[i],profit[i]);
        }
        Arrays.sort(jobs,(a,b)->a.difficulty-b.difficulty);
        Arrays.sort(worker);
        int idx = 0; int currProfit = 0;
        for(int i = 0; i < worker.length; i++){
            while(idx < n && worker[i] >= jobs[idx].difficulty){
                currProfit = Math.max(currProfit, jobs[idx].profit);
                idx++;  
            }     
            maxProfit += currProfit;
        }
        return maxProfit;
    }
    class Pair{
        int difficulty; int profit;
        Pair(int difficulty, int profit){
            this.difficulty = difficulty;
            this.profit = profit;
        }
    }
