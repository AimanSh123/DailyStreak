public String longestCommonSubsequence(String text1, String text2) {
        int [][] dp = new int[text1.length() + 1][text2.length() + 1];
        for(int i = text1.length() - 1; i >= 0; i--){
            for(int j = text2.length() - 1; j >= 0; j--){
                int take = 0;
                if(text1.charAt(i) == text2.charAt(j)){
                     take = dp[i+1][j+1] + 1;
                }
                int notTake1 = dp[i+1][j];
                int notTake2 = dp[i][j+1];
                dp[i][j] = Math.max(take, Math.max(notTake1, notTake2));
            }
        }
        int i = s.length() - 1, j = t.length() - 1;
        String word = "";
        while(i >= 0 && j >= 0){
            if(s.charAt(i) == t.charAt(j)){
                word = s.charAt(i) + word;
                i--; j--;
            }
            else if(dp[i + 1][j] > dp[i][j + 1]){
                i--;
            }
            else{
                j--;
            }
        }
        return word;
     }
