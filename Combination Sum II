 List<List<Integer>> result;
    public List<List<Integer>> CombinationSum2(int arr[], int n, int k) {
        // Code Here.
        Arrays.sort(arr);
        result = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        recursion(arr,0,k,list);
        return result;
    }
    public void recursion(int[]arr,int idx,int k,List<Integer>list){
        if(k ==0){
            result.add(new ArrayList<>(list));
            return;
        }
        for (int i = idx; i < arr.length; i++) {
            if (i > idx && arr[i] == arr[i - 1]) continue;
            if (arr[i] <= k) {
                list.add(arr[i]);
                recursion(arr, i + 1, k - arr[i], list);
                list.remove(list.size() - 1);
            }
        }
    }
