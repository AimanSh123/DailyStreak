    public int evalRPN(String[] tokens) {
        Stack<Integer> st = new Stack<>();
        for(int i = 0; i < tokens.length; i++){
            if(tokens[i].equals("+") || tokens[i].equals("-") 
            || tokens[i].equals("*") || tokens[i].equals("/")){
                int v2 = st.pop(); int v1 = st.pop();
                applyOper(v1, v2, st, tokens[i]);
            }
            else{
                st.push(Integer.parseInt(tokens[i]));
            }
        }
        return st.peek();
    }
    public void applyOper(int v1, int v2, Stack<Integer> st, String s){
        if(s.equals("+")){
            st.push(v1 + v2);
        }
        else if(s.equals("-")){
            st.push(v1 - v2);
        }
        else if(s.equals("*")){
            st.push(v1 * v2);
        }
        else{
            st.push(v1 / v2);
        }
    }
