  public List<Integer> findMinHeightTrees(int n, int[][] edges) {
        List<Integer>res = new ArrayList<>();
        Map<Integer,Set<Integer>>graph = new HashMap<>();
        int [] ind = new int[n];
        if(n == 1){
            res.add(0);
            return res;
        }
        for(int []edge:edges){
            ind[edge[0]]++; ind[edge[1]]++;
            graph.putIfAbsent(edge[0],new HashSet<>());
            graph.putIfAbsent(edge[1],new HashSet<>());
            graph.get(edge[0]).add(edge[1]);
            graph.get(edge[1]).add(edge[0]);
        }
        Queue<Integer> q = new ArrayDeque<>();
        for(int i = 0; i < ind.length; i++){
            if(ind[i] == 1){
                q.add(i);
            }
        }
        int processed = 0;
        while(n - processed > 2){
            int size = q.size();
            processed += size;
            for(int i = 0; i < size; i++){
                int curr = q.remove();
                for(int neigh: graph.get(curr)){
                    if(--ind[neigh] == 1){
                       q.add(neigh);
                    }
                }
            }
        }
        return new ArrayList<>(q);
    }
