  List<List<Integer>> sol;
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        sol = new ArrayList<>();
        recursion(candidates, target, 0, new ArrayList<>());
        return sol;
    }
    public void recursion(int[]candidates, int k, int idx, List<Integer>list){
        if(idx == candidates.length){
            if(k == 0){
                sol.add(new ArrayList<>(list));
            }
            return;
        }
        if(k >= candidates[idx]){
            list.add(candidates[idx]);
            recursion(candidates, k - candidates[idx], idx, list);
            list.remove(list.size() - 1);
        }
        recursion(candidates, k, idx + 1, list);
    }
