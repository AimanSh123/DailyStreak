 public int sumOfLeftLeaves(TreeNode root) {
        //lets do it with bfs
        Queue<Pair> q = new ArrayDeque<>();
        q.add(new Pair(root,false));
        int sum = 0;
        while(!q.isEmpty()){
            Pair p = q.remove();
            if(p.isLeft && p.node.left == null && p.node.right == null){
                sum += p.node.val;
            }
            if(p.node.left != null){
                q.add(new Pair(p.node.left,true));
            }
            if(p.node.right != null){
                q.add(new Pair(p.node.right,false));
            }
        }
        return sum;
    }
    class Pair{
        TreeNode node; boolean isLeft;
        Pair(TreeNode node, boolean isLeft){
            this.node = node;
            this.isLeft = isLeft;
        }
    }
