class Solution {
    public static String decodeString(String s) {
        Stack<String> st = new Stack<>();
        String string = "";
        for(int i = 0; i < s.length(); i++){
            if(s.charAt(i) != ']'){
                st.push(s.charAt(i) + "");
            }
            else{
                String res = "";
                while(!st.isEmpty() && !st.peek().equals("[")){
                    res = st.pop() + res;
                }
                if(!st.isEmpty())
                    st.pop();
                int num = 0; int counter = 0;
                while(!st.isEmpty() && isNumber(st.peek())){
                   num = num +  (Integer.parseInt(st.pop()) * (int) Math.pow(10,counter));
                   counter++; 
                }
                for(int j = 1; j <= num; j++){
                    st.push(res);
                }
            }
        }
        while(!st.isEmpty()){
            string = st.pop() + string;
        }
        return string;
    }    
    public static boolean isNumber(String s){
        for(int i = 0; i < s.length(); i++){
            if(!Character.isDigit(s.charAt(i))){
                return false;
            }
        }
        return true;
    }
}
