//brute force approach
 public int kInversePairs(int n, int k) {
        int [] nums = new int[n];
        for(int i = 0; i < n; i++){
            nums[i] = i + 1;
        }
        return recursion(nums, k, 0);
    }
    public int recursion(int [] nums, int k, int idx){
        if(idx == nums.length){
            if(inversePair(nums, k)){
                return 1;
            }
            return 0;
        } 
        int count = 0;
        for(int i = idx; i < nums.length; i++){
            int temp = nums[i]; nums[i] = nums[idx];
            nums[idx] = temp;
            count += recursion(nums, k, idx + 1);
            temp = nums[i]; nums[i] = nums[idx];
            nums[idx] = temp;     
        }
        return count;
    }
    public boolean inversePair(int [] nums, int k){
        int count = 0;
        for(int i = 0; i < nums.length; i++){
            for(int j = i + 1; j < nums.length; j++){
                 if(nums[i] > nums[j]){
                     count ++;
                 } 
            }
        }
        return count == k;
    }
