 public int maxLength(List<String> arr) {
        return recursion(arr, "", 0);
    }
    public int recursion(List<String> arr, String string, int idx){
        if(!isUnique(string)){
            return 0;   
        }
        if(idx == arr.size()){
            return string.length();
        }
        int notTake = recursion(arr, string, idx + 1);
        int take = recursion(arr, string + arr.get(idx), idx + 1);     
        return Math.max(take, notTake);
    }
    public boolean isUnique(String string){
        HashSet<Character> set = new HashSet<>();
        for(int i = 0; i < string.length(); i++){
            if(set.contains(string.charAt(i))){
                    return false;
            }
            set.add(string.charAt(i));
        }
        return true;
    }
