 public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> result = new ArrayList<>();
        recursion(root, targetSum,0,result,new ArrayList<>());
        return result;
    }
    public void recursion(TreeNode root,int target,int sum,List<List<Integer>>result,List<Integer> list){
        if(root == null){
            return;
        }
        sum += root.val;
        list.add(root.val);
        if(root.left == null && root.right == null && sum == target){
            result.add(new ArrayList<>(list));
            list.remove(list.size() - 1);
            return;
        }
        recursion(root.left,target,sum,result,list);
        recursion(root.right,target,sum,result,list);

        list.remove(list.size() - 1);     
    }
