class Solution {
    public TreeNode reverseOddLevels(TreeNode root) {
        Queue<TreeNode> q = new ArrayDeque<>();
        q.add(root);
        int level = 0;
        while(!q.isEmpty()){
            int size = q.size();
            List<TreeNode> list = new ArrayList<>();
            for(int i = 0; i < size; i++){
                TreeNode curr = q.remove();
                if(curr.left != null) q.add(curr.left);
                if(curr.right != null) q.add(curr.right);
                if(level % 2 == 1) list.add(curr); 
            }
            reverse(list);
            level++;
        }
        return root;        
    }
    public void reverse(List<TreeNode> list){
        int i = 0; int j = list.size() - 1;
        while(i < j){
            int temp = list.get(i).val;
            list.get(i).val = list.get(j).val;
            list.get(j).val = temp;
            i++; j--;
        }
    }
}
