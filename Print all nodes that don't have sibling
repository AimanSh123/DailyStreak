 ArrayList<Integer> noSibling(Node node)
    {
        //let's do it with bfs
        Queue<Node> q = new ArrayDeque<>();
        q.add(node); boolean iter = false;
        ArrayList<Integer> list = new ArrayList<>();
        while(!q.isEmpty()){
            int size = q.size(); 
            for(int i = 0; i < size; i++){
                  Node curr = q.remove();
                if(curr.left != null && curr.right == null){
                    list.add(curr.left.data);
                }
                if(curr.right != null && curr.left == null){
                    list.add(curr.right.data);
                }
                if(curr.left != null) q.add(curr.left);
                if(curr.right != null) q.add(curr.right);
            }
            iter = true;
        } 
        Collections.sort(list);
        if(list.size() == 0){
            list.add(-1);
        }
  
        return list;
    }
