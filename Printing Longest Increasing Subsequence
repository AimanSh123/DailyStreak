  public static List< Integer > printingLongestIncreasingSubsequence(int []arr, int x) {
        // Write Your Code Here
        int[] dp = new int[x];
        Arrays.fill(dp, 1); int len = 1;
        int [] hash = new int[x]; int idx = 0;
        for (int i = 0; i < x; i++) {
            hash[i] = i;
            for (int j = 0; j < i; j++) {
                if (arr[i] > arr[j] && dp[i] < 1 + dp[j]) {
                    dp[i] = 1 + dp[j];
                    hash[i] = j;
                }
            }
            if(len < dp[i]){
                len = dp[i];
                idx = i;
            }
        }
        List<Integer> res = new ArrayList<>();
        res.add(arr[idx]); 
        while(hash[idx] != idx){
            res.add(arr[idx]);
            idx = hash[idx];
        }
        Collections.reverse(res);
        return (res);
    }
