 public int deepestLeavesSum(TreeNode root) {
        int maxDepth = dfs(root);
        Queue<TreeNode> q = new ArrayDeque<>();
        q.add(root);
        while (maxDepth > 1) {
            maxDepth--;
            int size = q.size();
            for (int i = 0; i < size; i++) {
                TreeNode curr = q.remove();
                if(curr.left != null){
                    q.add(curr.left);
                }
                if(curr.right != null){
                    q.add(curr.right);
                }
            }
        }
        int sum = 0;
        while(!q.isEmpty()){
            sum += q.remove().val;
        }
        return sum;
    }

    public int dfs(TreeNode root) {
        if (root == null)
            return 0;
        int leftSide = dfs(root.left);
        int rightSide = dfs(root.right);
        return 1 + Math.max(leftSide, rightSide);
    }
