class Solution {
    public int minimumMountainRemovals(int[] nums) {
        int ans = Integer.MAX_VALUE;
        int[] leftLIS = LIS(nums);
        int[] rightLIS = RIS(nums);
        for (int i = 0; i < nums.length; i++) {
            if(leftLIS[i] > 1 && rightLIS[i] > 1){
               int seq = leftLIS[i] + rightLIS[i] - 1;
               ans = Math.min(ans, nums.length - seq);
            }
        }
        return ans;
    }

    public int[] LIS(int[] nums) {
        int[] lis = new int[nums.length];
        for (int i = 0; i < nums.length; i++) {
            lis[i] = 1;
            for (int j = 0; j < i; j++) {
                if (nums[j] < nums[i]) {
                    lis[i] = Math.max(lis[i], lis[j] + 1);
                }
            }
        }
        return lis;
    }

    public int[] RIS(int[] nums) {
        int[] ris = new int[nums.length];
        for (int i = nums.length - 1; i >= 0; i--) {
            ris[i] = 1;
            for (int j = nums.length - 1; j > i; j--) {
                if (nums[j] < nums[i]) {
                    ris[i] = Math.max(ris[i], ris[j] + 1);
                }
            }
        }
        return ris;
    }
}
