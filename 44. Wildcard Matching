//recursion
public boolean isMatch(String s, String p) {
        return recursion(s, p, 0, 0);        
    }
    public boolean recursion(String s, String p, int i, int j){
        if(i == s.length() && j == p.length()){
            return true;
        }
        if(i < s.length() && j == p.length()){
            return false;
        }
        if(i == s.length() && j < p.length()){
            for(int k = j; k < p.length(); k++){
                if(p.charAt(k) != '*'){
                    return false;
                }
            }
            return true;
        }
        if(s.charAt(i) == p.charAt(j) || p.charAt(j) == '?'){
            return recursion(s, p, i+1, j+1);
        }
        if(p.charAt(j) == '*'){
            return recursion(s,p,i+1,j) || recursion(s,p,i,j+1);
        }
        return false;   
    }
//memoization
  public boolean isMatch(String s, String p) {
        int [][] dp = new int[s.length()][p.length()];
        for(int i = 0; i < dp.length; i++){
            Arrays.fill(dp[i],-1);
        }
        return recursion(dp, s, p, 0, 0);        
    }
    public boolean recursion(int [][] dp, String s, String p, int i, int j){
        if(i == s.length() && j == p.length()){
            return true;
        }
        if(i < s.length() && j == p.length()){
            return false;
        }
        if(i == s.length() && j < p.length()){
            for(int k = j; k < p.length(); k++){
                if(p.charAt(k) != '*'){
                    return false;
                }
            }
            return true;
        }
        if(dp[i][j] != -1){
            if(dp[i][j] == 1){
                return true;
            }
            return false;
        }
        if(s.charAt(i) == p.charAt(j) || p.charAt(j) == '?'){
            dp[i][j] = 1;
            return recursion(dp, s, p, i+1, j+1);
        }
        if(p.charAt(j) == '*'){
            boolean bool = (recursion(dp, s,p,i+1,j) || recursion(dp, s,p,i,j+1));
            if(bool){
                dp[i][j] = 1;
            }
            else{
                dp[i][j] = 0;
            }
            return bool;
        }
        dp[i][j] = 0;
        return false;   
    }
//tabulation
 public boolean isMatch(String s, String p) {
        boolean [][] dp = new boolean[s.length() + 1][p.length() + 1];
        dp[0][0] = true;
        for(int i = 1; i < dp.length; i++){
            dp[i][0] = false;
        }
        for(int j = 1; j < dp[0].length; j++){
            boolean flag = true;
            for(int k = j; k >= 1; k--){
                if(p.charAt(k -1) != '*'){
                    flag = false;
                }
            }
            dp[0][j] = flag;
        }
        for(int i = 1; i <= s.length(); i++){
            for(int j = 1; j <= p.length(); j++){
                if(s.charAt(i - 1) == p.charAt(j - 1) || p.charAt(j - 1) == '?'){
                     dp[i][j] = dp[i-1][j-1];
                     
                }
                else if(p.charAt(j - 1) == '*'){
                   dp[i][j] = dp[i-1][j] || dp[i][j-1];
                }
                else{
                    dp[i][j] = false;
                }
            }
        }  
        return dp[s.length()][p.length()];        
    }
