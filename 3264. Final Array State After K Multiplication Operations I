class Solution {
    public int[] getFinalState(int[] nums, int k, int multiplier) {
        PriorityQueue<Pair> pq = new PriorityQueue<>((a,b)->{
           if(a.value == b.value) return a.idx-b.idx;
           return a.value - b.value;
        });
        for(int i = 0; i < nums.length; i++){
            pq.add(new Pair(nums[i],i));
        }
        while(k > 0){
            Pair p =pq.remove();
            nums[p.idx] = p.value * multiplier;
            pq.add(new Pair(nums[p.idx],p.idx));
            k--;
        }
        return nums;
    }
    class Pair{
        int idx; int value;
        Pair(int value, int idx){
            this.value = value;
            this.idx = idx;
        }
    }
}
