//brute force
public int sumSubarrayMins(int[] arr) {
        long sum = 0; int mod = 1000000007;
        for(int i = 0; i < arr.length; i++){
            int mini = arr[i];
            for(int j = i; j < arr.length; j++){
                mini = Math.min(mini, arr[j]);
                sum = (sum + mini) % mod;
            }
        }    
        return (int) sum;
    }
//optimal
//logic: array : [2 9 7 8 3 4 6 1]
//so in the window of {9 7 8 3 4 6 1}
//9 7 8 3            7 8 3 4 6         3 4
//9 7 8 3 4          8 3               3 4 6 
//9 7 8 3 4 6        8 3 4  
//7 8 3              8 3 4 6 
//7 8 3 4            3 
// for the case : 3 3 6 2 5 6 7 8:  2 is the minimal-> g1 = i and g2 = A.size() - i - 1
 

