 int side;
    public int islandPerimeter(int[][] grid) {
        int n = grid.length; int m = grid[0].length;
        side = 0;
        for(int i = 0; i < n; i++){
            for(int j = 0; j < m; j++){
                if(grid[i][j] == 1){
                    dfs(grid,i,j);
                }
            }
        }
        return side;
    }
    public void dfs(int [][] grid,int i, int j){
        int sum = 0;
        int sum1 = i==0 ? 1 : 0;
        int sum2 = j==0 ? 1 : 0;
        int sum3 = i==grid.length-1 ? 1 : 0;
        int sum4 = j == grid[0].length - 1 ? 1 : 0;
        sum = sum1 + sum2 + sum3 + sum4;
        //left 
        if(j >= 1 && grid[i][j-1] == 0){
            sum++;
        }
        //right
        if(j + 1 < grid[0].length && grid[i][j+1] == 0){
            sum++;
        }
        //bottom
        if(i+1 < grid.length && grid[i+1][j]==0){
            sum++;
        }
        //top
        if(i-1>=0 && grid[i-1][j]==0){
            sum++;
        }
        side += sum;
    }
