 public boolean isInterleave(String s1, String s2, String s3) {
        if(s1.length() + s2.length() != s3.length()){
            return false;
        }
        int [][] dp = new int [s1.length()+1][s2.length()+1];
        for(int [] it: dp){
            Arrays.fill(it,-1);
        }
        return recursion(dp,s1,s2,s3,0,0,0); 
    }
    public boolean recursion(int[][]dp,String s1,String s2,String s3,int i,int j,int k){
        if(i==s1.length() && j==s2.length() && k==s3.length()){
            return true;
        }
        if((i>=s1.length() && j>=s2.length())){
            return false;
        }
        if(k>=s3.length()){
            return false;
        }
        if(i < s1.length() && j < s2.length() && dp[i][j] != -1){
            if(dp[i][j] == 1){
                return true;
            }
            return false;
        }
        if(i < s1.length() && s1.charAt(i)==s3.charAt(k)){
            if(recursion(dp,s1,s2,s3,i+1,j,k+1)){
                dp[i][j] = 1;
                return true;
            }
        }
        if(j < s2.length() && s2.charAt(j)==s3.charAt(k)){
            if(recursion(dp,s1,s2,s3,i,j+1,k+1)){
                dp[i][j] = 1;
                return true;
            }
        }
        dp[i][j] = 0;
        return false;
    }
