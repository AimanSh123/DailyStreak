  List<List<String>> result;
    public List<List<String>> partition(String s) {
        result = new ArrayList<>();
        recursion(s, new ArrayList<>(), 0);
        return result;
    }
    public void recursion(String s, List<String> list, int idx){
        if(idx == s.length()){
            result.add(new ArrayList<>(list));
            return;
        }
        for(int i = idx; i < s.length(); i++){
            String curr = s.substring(idx, i + 1);
            if(isPal(curr)){
                list.add(curr);
               recursion(s,list,i+1);
               list.remove(list.size() - 1);
            }
        }
    }
    public boolean isPal(String curr){
        int i = 0; int j = curr.length() - 1;
        while(i < j){
            if(curr.charAt(i) != curr.charAt(j)){
                return false;
            }
            i++; j--;
        }
        return true;
    }
