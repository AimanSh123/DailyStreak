 public ArrayList<Integer> reverseLevelOrder(Node node){
        Queue<Node> q = new ArrayDeque<>();
        q.add(node);
        Stack<Integer> st = new Stack<>();
        while(!q.isEmpty()){
            int size = q.size();
            List<Integer> list = new ArrayList<>();
            for(int i = 0; i < size; i++){
                Node curr = q.remove();
                if(curr.left != null) q.add(curr.left);
                if(curr.right != null) q.add(curr.right);
                list.add(curr.data);
            }
            for(int i = list.size()-1; i>=0;i--){
                st.push(list.get(i));
            }
        }
        ArrayList<Integer> res = new ArrayList<>();
        while(!st.isEmpty()){
            res.add(st.pop());
        }
        return res;
    }
