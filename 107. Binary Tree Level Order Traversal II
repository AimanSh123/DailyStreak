  public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if(root == null){
            return ans;
        }
        Queue<TreeNode> q = new ArrayDeque<>();
        q.add(root);
        while(!q.isEmpty()){
            int size = q.size();
            List<Integer> list = new ArrayList<>();
            for(int i = 0; i < size; i++){
                TreeNode curr = q.remove();
                list.add(curr.val);
                if(curr.left != null){
                    q.add(curr.left);
                }
                if(curr.right != null){
                    q.add(curr.right);
                }
            }    
           ans.add(list); 
        }int left = 0; int right = ans.size() - 1;
        while(left < right){
            List<Integer> temp = ans.get(left);
            ans.set(left, ans.get(right));
            ans.set(right, temp);
            left++; right--;
        }
        return ans;
    }
