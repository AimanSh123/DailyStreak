  public int minSizeSubarray(int[] nums, int target) {
        long sum = 0; int n = nums.length;
        for(int it : nums){
            sum += it;
        }
        if(target % sum == 0){
            return (int) (target / sum) * n;
        }
        int [] arr = new int[2*n];
        for(int i = 0; i < n; i++){
            arr[i] = nums[i];
        }
        for(int i = 0; i < n; i++){
            arr[i + n] = nums[i];
        }
        int ans = Integer.MAX_VALUE;
        int remArr =(int) (target / sum) * n;
        target -= ((target / sum) * sum);
        int i = 0, j = 0; sum = 0;
        while(j < arr.length){
            sum += arr[j];
            while(sum > target){
                sum -= arr[i];
                i++;
            }
            while(sum == target){
                ans = Math.min(ans, j - i + 1);
                sum -= arr[i];
                i++;
            }
            j++;
        }
        if(ans == Integer.MAX_VALUE)
            return -1;
        return ans + remArr;
    }
